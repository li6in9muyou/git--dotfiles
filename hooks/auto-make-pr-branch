#!/bin/sh

current_branch=$(git rev-parse --abbrev-ref HEAD)
# 检查当前分支是否以'd/'开头
if [[ $current_branch =~ ^d/ ]]; then
    master_commit=${current_branch/#d\//my-fork/}

    # 找到当前分支和master分支的公共祖先
    merge_base=$(git merge-base $current_branch $master_commit)

    # 创建一个新的临时分支，用于squash操作
    temp_branch="crap/temp-squash-$(date +%s)"
    git branch $temp_branch $merge_base
    git checkout $temp_branch
    git merge --squash $current_branch
    git commit --no-edit

    # 检查是否只有一个commit（即squash成功）
    if [ $(git rev-list --count HEAD ^$merge_base) -eq 1 ]; then
        # 创建一个新的pr/<时间戳>分支
        cnt=$(find .git/refs/heads/pr -type f 2>/dev/null | wc -l)
        git branch "pr/$((cnt+1))"
    else
        echo "squash failed"
    fi

    # 清理临时分支
    git checkout $current_branch
    git branch -D $temp_branch
else
    echo "Not a 'd/' branch, skipping squash."
fi
